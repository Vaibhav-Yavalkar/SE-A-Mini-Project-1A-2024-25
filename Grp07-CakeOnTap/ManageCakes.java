/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CakeOnTap;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author vaish444
 */
public class ManageCakes extends javax.swing.JFrame {
    private static final String username = "root";
    private static final String password = "123456";
    private static final String dataConn = "jdbc:mysql://localhost:3306/cake_on_tap";
    
    Connection Con = null;
    PreparedStatement pst = null;
    ResultSet rs= null;
    int q,i,id,deleteItem;

    /**
     * Creates new form ManageCakes
     */
    public ManageCakes() {
        initComponents();
        upDateDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    //=====================================Function======================================================
    public void upDateDB()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Con = DriverManager.getConnection(dataConn, username, password);
            pst = Con.prepareStatement("select * from cake");
            
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                
                for(i=1;i<=q;i++){
                    columnData.add(rs.getString("id"));
                    columnData.add(rs.getString("name"));
                    columnData.add(rs.getString("quantity"));
                    columnData.add(rs.getString("price"));

                }
                RecordTable.addRow(columnData);  
            }
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }

    
    
    
    //====================================Function End===================================================
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Xexitlable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtcakeid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        jbtndelete = new javax.swing.JButton();
        jbtnsave = new javax.swing.JButton();
        jclearbtn = new javax.swing.JButton();
        jBtnupdate = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Xexitlable.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Xexitlable.setForeground(new java.awt.Color(102, 0, 0));
        Xexitlable.setText("X");
        Xexitlable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XexitlableMouseClicked(evt);
            }
        });
        jPanel1.add(Xexitlable, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, -1, 40));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("MANAGE CAKE DETAILS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 480, 48));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Search:-");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, 90, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Cake name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 99, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Quantity");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 81, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Price");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 81, -1));

        jTable1.setBackground(new java.awt.Color(255, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cake ID", "Cake name", "Quantity", "Price"
            }
        ));
        jTable1.setShowGrid(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 600, 390));

        txtcakeid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcakeidActionPerformed(evt);
            }
        });
        jPanel1.add(txtcakeid, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 276, 36));

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        jPanel1.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 276, 36));

        txtquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquantityActionPerformed(evt);
            }
        });
        jPanel1.add(txtquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 276, 36));

        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 276, 36));

        jbtndelete.setBackground(new java.awt.Color(190, 106, 51));
        jbtndelete.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jbtndelete.setText("DELETE");
        jbtndelete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jbtndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jbtndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 120, -1));

        jbtnsave.setBackground(new java.awt.Color(190, 106, 51));
        jbtnsave.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jbtnsave.setText("SAVE");
        jbtnsave.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jbtnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsaveActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 120, -1));

        jclearbtn.setBackground(new java.awt.Color(190, 106, 51));
        jclearbtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jclearbtn.setText("CLEAR");
        jclearbtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jclearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jclearbtnActionPerformed(evt);
            }
        });
        jPanel1.add(jclearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, 120, -1));

        jBtnupdate.setBackground(new java.awt.Color(190, 106, 51));
        jBtnupdate.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jBtnupdate.setText("UPDATE");
        jBtnupdate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jBtnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnupdateActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 430, 120, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Cake ID");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 81, -1));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 280, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtcakeidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcakeidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcakeidActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquantityActionPerformed

    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpriceActionPerformed

    private void XexitlableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XexitlableMouseClicked
        // TODO add your handling code here:
        new AdminDashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_XexitlableMouseClicked

    private void jclearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jclearbtnActionPerformed
        // TODO add your handling code here:
        txtcakeid.setText("");
        txtname.setText("");
        txtquantity.setText("");
        txtprice.setText("");
           
    }//GEN-LAST:event_jclearbtnActionPerformed

    private void jbtnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsaveActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Con = DriverManager.getConnection(dataConn, username, password);
            pst = Con.prepareStatement("insert into cake(id,name,quantity,price)value(?,?,?,?)");

            pst.setString(1, txtcakeid.getText());
            pst.setString(2, txtname.getText());
            pst.setString(3, txtquantity.getText());
            pst.setString(4, txtprice.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cake Added!!");
            upDateDB();
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_jbtnsaveActionPerformed

    private void jBtnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnupdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();

        try {
            id = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            Con = DriverManager.getConnection(dataConn, username, password);
            pst = Con.prepareStatement("update cake set  name=?,quantity =?,price=? where  id =?");
            
            pst.setString(4, txtcakeid.getText());
            pst.setString(1, txtname.getText());
            pst.setString(2, txtquantity.getText());
            pst.setString(3, txtprice.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cake Updated!!");
            upDateDB();
            
            txtcakeid.setText("");
            txtname.setText("");
            txtquantity.setText("");
            txtprice.setText("");
                
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        
    }//GEN-LAST:event_jBtnupdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedIndex = jTable1.getSelectedRow();
        
        txtcakeid.setText(RecordTable.getValueAt(SelectedIndex, 0).toString());
        txtname.setText(RecordTable.getValueAt(SelectedIndex, 1).toString());
        txtquantity.setText(RecordTable.getValueAt(SelectedIndex, 2).toString());
        txtprice.setText(RecordTable.getValueAt(SelectedIndex, 3).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtndeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();
        
        try {
            id = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
            deleteItem = JOptionPane.showConfirmDialog(null,"Confirm If you want to delete the cake??","warning",JOptionPane.YES_NO_OPTION);
            if (deleteItem==JOptionPane.YES_OPTION)
            {
                Class.forName("com.mysql.jdbc.Driver");
                Con = DriverManager.getConnection(dataConn, username, password);
                pst = Con.prepareStatement("delete from cake where id=?");
                pst.setInt(1,id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Cake Deleted!!");
                upDateDB();
                
                txtcakeid.setText("");
                txtname.setText("");
                txtquantity.setText("");
                txtprice.setText("");        
                
            }
        }catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex){
            System.err.println(ex);
        }
    }//GEN-LAST:event_jbtndeleteActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dt = (DefaultTableModel)jTable1.getModel();
            TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dt);
            jTable1.setRowSorter(trs);
            trs.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel dt = (DefaultTableModel)jTable1.getModel();
            TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dt);
            jTable1.setRowSorter(trs);
            trs.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCakes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCakes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Xexitlable;
    private javax.swing.JButton jBtnupdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtndelete;
    private javax.swing.JButton jbtnsave;
    private javax.swing.JButton jclearbtn;
    private javax.swing.JTextField txtcakeid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
